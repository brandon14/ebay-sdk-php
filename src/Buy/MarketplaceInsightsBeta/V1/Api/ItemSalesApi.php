<?php

/**
 * This file is part of the brandon14/ebay-sdk-php package.
 *
 * MIT License
 *
 * Copyright (c) 2022 Brandon Clothier
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

declare(strict_types=1);

/**
 * ItemSalesApi.
 *
 * PHP version ^7.2 || ^8.0
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://openapi-generator.tech
 */

/**
 * Marketplace Insights API.
 *
 * <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> The Marketplace Insights API provides the ability to search for sold items on eBay by keyword, GTIN, category, and product and returns the of sales history of those items.
 *
 * The version of the OpenAPI document: v1_beta.2.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Api;

use GuzzleHttp\Client;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\Exception\ConnectException;
use GuzzleHttp\Exception\RequestException;
use TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\ApiException;
use TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Configuration;
use TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\HeaderSelector;
use TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\ObjectSerializer;

/**
 * ItemSalesApi Class Doc Comment.
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @see     https://openapi-generator.tech
 */
class ItemSalesApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index.
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index.
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfiguration()
    {
        return $this->config;
    }

    /**
     * Operation search.
     *
     * @param string $aspect_filter This field lets you filter by item aspects. The aspect name/value pairs and category, which is required, is used to limit the results to specific aspects of the item. For example, in a clothing category one aspect pair would be Color/Red. The results are returned in the &lt;b&gt;refinement&lt;/b&gt; container.   &lt;br /&gt;&lt;br /&gt;For example, the method below uses the category ID for Women&#39;s Clothing. This will return only sold items for a woman&#39;s red or blue shirt.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;aspect_filter&#x3D;categoryId:15724,Color:{Red|Blue}&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;To get a list of the aspects pairs and the category, which is returned in the &lt;b&gt; dominantCategoryId&lt;/b&gt; field, set &lt;b&gt; fieldgroups&lt;/b&gt; to &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt;.   &lt;br /&gt;&lt;br /&gt; &lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;fieldgroups&#x3D;ASPECT_REFINEMENTS&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Format: &lt;/b&gt; &lt;code&gt;&lt;i&gt;aspectName&lt;/i&gt;:{&lt;i&gt;value1&lt;/i&gt;|&lt;i&gt;value2&lt;/i&gt;}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Required: &lt;/b&gt; The category ID is required &lt;i&gt;twice&lt;/i&gt;; once as a URI parameter and as part of the &lt;b&gt; aspect_filter&lt;/b&gt; parameter. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/gct:AspectFilter (optional)
     * @param string $category_ids  The category ID is required and is used to limit the results. For example, if you search for &#39;shirt&#39; the result set will be very large. But if you also include the category ID &lt;code&gt;137084&lt;/code&gt;, the results will be limited to &#39;Men&#39;s Athletic Apparel&#39;. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;137084&lt;/code&gt;                &lt;p&gt;The list of eBay category IDs is not published and category IDs are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site: &lt;/p&gt;     &lt;ul&gt; &lt;li&gt;For the US marketplace, use the &lt;a href&#x3D;\&quot;https://pages.ebay.com/sellerinformation/news/categorychanges.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Category Changes page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Use the Taxonomy API. For details see &lt;a href&#x3D;\&quot;/api-docs/buy/buy-categories.html\&quot;&gt;Get Categories for Buy APIs&lt;/a&gt;. &lt;/li&gt;  &lt;/ul&gt;  &lt;b&gt; Usage:&lt;/b&gt;  &lt;ul&gt;&lt;li&gt;This field can have one category ID or a comma separated list of IDs.&lt;/li&gt;    &lt;li&gt;You can use &lt;b&gt;category_ids&lt;/b&gt; by itself or use it with any combination of the &lt;b&gt; gtin&lt;/b&gt;, &lt;b&gt; epid&lt;/b&gt;, and &lt;b&gt; q&lt;/b&gt; fields, which gives you additional control over the result set.&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;Restrictions: &lt;/b&gt; &lt;ul&gt;  &lt;li&gt;Partners will be given a list of categories they can use.  &lt;/li&gt;  &lt;li&gt;To use a top-level (L1) category, you &lt;b&gt; must&lt;/b&gt; also include the &lt;b&gt; q&lt;/b&gt;, or &lt;b&gt; gtin&lt;/b&gt;, or &lt;b&gt; epid&lt;/b&gt;  query parameter.  &lt;/li&gt;  &lt;/ul&gt; &lt;b&gt;Maximum number of categories:&lt;/b&gt; 4 (optional)
     * @param string $epid          The ePID is the eBay product identifier of a product from the eBay product catalog. This field limits the results to only items in the specified ePID. &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?epid&#x3D;241986085&amp;category_ids&#x3D;168058&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;You can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/catalog/resources/product_summary/methods/search\&quot;&gt;product_summary/search&lt;/a&gt; method in the &lt;b&gt;Catalog&lt;/b&gt; API to search for the ePID of the product.   &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;epid&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $fieldgroups   This field lets you control what is to be returned in the response and accepts a comma separated list of values. &lt;br /&gt;&lt;br /&gt;The default is &lt;b&gt; MATCHING_ITEMS&lt;/b&gt;, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, &lt;a href&#x3D;\&quot;#request.aspect_filter\&quot;&gt;aspect_filter&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;    &lt;li&gt;&lt;b&gt; ASPECT_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.aspectDistributions\&quot;&gt;aspectDistributions&lt;/a&gt; container, which has the &lt;b&gt; dominantCategoryId&lt;/b&gt;, &lt;b&gt; matchCount&lt;/b&gt;, and &lt;b&gt; refinementHref&lt;/b&gt; for the various aspects of the items found. For example, if you searched for &#39;Mustang&#39;, some of the aspect would be &lt;b&gt; Model Year&lt;/b&gt;,  &lt;b&gt; Exterior Color&lt;/b&gt;, &lt;b&gt; Vehicle Mileage&lt;/b&gt;, etc. &lt;br /&gt; &lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt; ASPECT_REFINEMENTS are category specific.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;   &lt;li&gt;&lt;b&gt; BUYING_OPTION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.buyingOptionDistributions\&quot;&gt;buyingOptionDistributions&lt;/a&gt;  container, which has the &lt;b&gt; matchCount&lt;/b&gt; and &lt;b&gt; refinementHref&lt;/b&gt; for &lt;b&gt; AUCTION&lt;/b&gt; and &lt;b&gt; FIXED_PRICE&lt;/b&gt; (Buy It Now) items. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Classified items are not supported. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CATEGORY_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.categoryDistributions\&quot;&gt;categoryDistributions&lt;/a&gt; container, which has the categories that the item is in.   &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CONDITION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.conditionDistributions\&quot;&gt;conditionDistributions&lt;/a&gt;  container, such as &lt;b&gt; NEW&lt;/b&gt;, &lt;b&gt; USED&lt;/b&gt;, etc. Within these groups are multiple states of the condition. For example, &lt;b&gt; New &lt;/b&gt; can be New without tag, New in box, New without box, etc. &lt;/li&gt;   &lt;li&gt;&lt;b&gt; MATCHING_ITEMS&lt;/b&gt; - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. &lt;/li&gt; &lt;li&gt;&lt;b&gt; FULL &lt;/b&gt; - This returns all the refinement containers and all the matching items.&lt;/li&gt;   &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; MATCHING_ITEMS (optional)
     * @param string $filter        This field supports multiple field filters that can be used to limit/customize the result set. &lt;br /&gt;&lt;br /&gt;The following lists the supported filters. For details and examples for all the filters, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html\&quot;&gt;Buy API Field Filters&lt;/a&gt;.  &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;ul&gt;     &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#buyingOptions\&quot;&gt;buyingOptions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditionIds\&quot;&gt;conditionIds&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditions\&quot;&gt;conditions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#itemLocationCountry\&quot;&gt;itemLocationCountry&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;      &lt;td&gt; &lt;ul&gt;&lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#lastSoldDate\&quot;&gt;lastSoldDate&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#price\&quot;&gt;price&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#priceCurrency\&quot;&gt;priceCurrency&lt;/a&gt; &lt;/li&gt;  &lt;/ul&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;/table&gt; &lt;br /&gt;The following example filters the result set by price. &lt;b&gt;Note: &lt;/b&gt;To filter by price, &lt;b&gt;price&lt;/b&gt; and &lt;b&gt;priceCurrency&lt;/b&gt; must always be used together.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;filter&#x3D;price:[50..500],priceCurrency:USD&lt;/code&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:FilterField (optional)
     * @param string $gtin          This field lets you search by the Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.        &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?gtin&#x3D;241986085&amp;category_ids&#x3D;9355&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;gtin&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $limit         The number of items, from the result set, returned in a single page.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Default:&lt;/b&gt; 50&lt;br /&gt;&lt;b&gt; Maximum number of items per page (limit): &lt;/b&gt;200  &lt;br /&gt; &lt;b&gt; Maximum number of items in a result set: &lt;/b&gt; 10,000 (optional)
     * @param string $offset        Specifies the number of items to skip in the result set. This is used with the &lt;b&gt; limit&lt;/b&gt; field to control the pagination of the output.  &lt;br /&gt;&lt;br /&gt;If &lt;b&gt; offset&lt;/b&gt; is 0 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 1-10 from the list of items returned, if &lt;b&gt; offset&lt;/b&gt; is 10 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 11 thru 20 from the list of items returned.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values&lt;/b&gt;: 0-10,000 (inclusive) &lt;br /&gt; &lt;b&gt; Default:&lt;/b&gt; 0 &lt;br /&gt; &lt;b&gt; Maximum number of items returned: &lt;/b&gt; 10,000 (optional)
     * @param string $q             A string consisting of one or more keywords that are used to search for items on eBay. The keywords are handled as follows: &lt;ul&gt;&lt;li&gt;If the keywords are separated by a comma, it is treated as an AND. In the following example, the query returns items that have iphone &lt;b&gt; AND&lt;/b&gt; ipad.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,ipad&amp;category_ids&#x3D;15724&lt;/code&gt;  &lt;br/&gt; &lt;/li&gt;  &lt;li&gt; If the keywords are separated by a space, it is treated as an OR.  In the following examples, the query returns items that have iphone &lt;b&gt; OR&lt;/b&gt; ipad.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;nbsp;ipad&lt;/code&gt; &lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,&amp;nbsp;ipad&amp;category_ids&#x3D;15724&lt;/code&gt; &lt;br /&gt;   &lt;/li&gt;&lt;/ul&gt; &lt;b&gt; Restriction: &lt;/b&gt;The &lt;code&gt;*&lt;/code&gt; wildcard character is &lt;b&gt; not&lt;/b&gt; allowed in this field. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $sort          This field specifies the order and the field name to use to sort the items. To sort in descending order use &lt;code&gt;-&lt;/code&gt; before the field name.  Currently, you can only sort by price (in ascending or descending order).     &lt;br /&gt;&lt;br /&gt;If no sort parameter is submitted, the result set is sorted by  &amp;quot;&lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/searchstanding.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Best Match&lt;/a&gt;&amp;quot;.     &lt;br /&gt;&lt;br /&gt;The following are examples of using the &lt;b&gt; sort&lt;/b&gt; query parameter.    &lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Sort&lt;/th&gt;&lt;th&gt;Result&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in ascending order (lowest price first)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;-price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in descending order (highest price first)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt; Default: &lt;/b&gt; ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:SortField (optional)
     *
     * @throws \TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return \TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection
     */
    public function search($aspect_filter = null, $category_ids = null, $epid = null, $fieldgroups = null, $filter = null, $gtin = null, $limit = null, $offset = null, $q = null, $sort = null)
    {
        [$response] = $this->searchWithHttpInfo($aspect_filter, $category_ids, $epid, $fieldgroups, $filter, $gtin, $limit, $offset, $q, $sort);

        return $response;
    }

    /**
     * Operation searchWithHttpInfo.
     *
     * @param string $aspect_filter This field lets you filter by item aspects. The aspect name/value pairs and category, which is required, is used to limit the results to specific aspects of the item. For example, in a clothing category one aspect pair would be Color/Red. The results are returned in the &lt;b&gt;refinement&lt;/b&gt; container.   &lt;br /&gt;&lt;br /&gt;For example, the method below uses the category ID for Women&#39;s Clothing. This will return only sold items for a woman&#39;s red or blue shirt.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;aspect_filter&#x3D;categoryId:15724,Color:{Red|Blue}&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;To get a list of the aspects pairs and the category, which is returned in the &lt;b&gt; dominantCategoryId&lt;/b&gt; field, set &lt;b&gt; fieldgroups&lt;/b&gt; to &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt;.   &lt;br /&gt;&lt;br /&gt; &lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;fieldgroups&#x3D;ASPECT_REFINEMENTS&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Format: &lt;/b&gt; &lt;code&gt;&lt;i&gt;aspectName&lt;/i&gt;:{&lt;i&gt;value1&lt;/i&gt;|&lt;i&gt;value2&lt;/i&gt;}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Required: &lt;/b&gt; The category ID is required &lt;i&gt;twice&lt;/i&gt;; once as a URI parameter and as part of the &lt;b&gt; aspect_filter&lt;/b&gt; parameter. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/gct:AspectFilter (optional)
     * @param string $category_ids  The category ID is required and is used to limit the results. For example, if you search for &#39;shirt&#39; the result set will be very large. But if you also include the category ID &lt;code&gt;137084&lt;/code&gt;, the results will be limited to &#39;Men&#39;s Athletic Apparel&#39;. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;137084&lt;/code&gt;                &lt;p&gt;The list of eBay category IDs is not published and category IDs are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site: &lt;/p&gt;     &lt;ul&gt; &lt;li&gt;For the US marketplace, use the &lt;a href&#x3D;\&quot;https://pages.ebay.com/sellerinformation/news/categorychanges.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Category Changes page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Use the Taxonomy API. For details see &lt;a href&#x3D;\&quot;/api-docs/buy/buy-categories.html\&quot;&gt;Get Categories for Buy APIs&lt;/a&gt;. &lt;/li&gt;  &lt;/ul&gt;  &lt;b&gt; Usage:&lt;/b&gt;  &lt;ul&gt;&lt;li&gt;This field can have one category ID or a comma separated list of IDs.&lt;/li&gt;    &lt;li&gt;You can use &lt;b&gt;category_ids&lt;/b&gt; by itself or use it with any combination of the &lt;b&gt; gtin&lt;/b&gt;, &lt;b&gt; epid&lt;/b&gt;, and &lt;b&gt; q&lt;/b&gt; fields, which gives you additional control over the result set.&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;Restrictions: &lt;/b&gt; &lt;ul&gt;  &lt;li&gt;Partners will be given a list of categories they can use.  &lt;/li&gt;  &lt;li&gt;To use a top-level (L1) category, you &lt;b&gt; must&lt;/b&gt; also include the &lt;b&gt; q&lt;/b&gt;, or &lt;b&gt; gtin&lt;/b&gt;, or &lt;b&gt; epid&lt;/b&gt;  query parameter.  &lt;/li&gt;  &lt;/ul&gt; &lt;b&gt;Maximum number of categories:&lt;/b&gt; 4 (optional)
     * @param string $epid          The ePID is the eBay product identifier of a product from the eBay product catalog. This field limits the results to only items in the specified ePID. &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?epid&#x3D;241986085&amp;category_ids&#x3D;168058&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;You can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/catalog/resources/product_summary/methods/search\&quot;&gt;product_summary/search&lt;/a&gt; method in the &lt;b&gt;Catalog&lt;/b&gt; API to search for the ePID of the product.   &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;epid&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $fieldgroups   This field lets you control what is to be returned in the response and accepts a comma separated list of values. &lt;br /&gt;&lt;br /&gt;The default is &lt;b&gt; MATCHING_ITEMS&lt;/b&gt;, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, &lt;a href&#x3D;\&quot;#request.aspect_filter\&quot;&gt;aspect_filter&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;    &lt;li&gt;&lt;b&gt; ASPECT_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.aspectDistributions\&quot;&gt;aspectDistributions&lt;/a&gt; container, which has the &lt;b&gt; dominantCategoryId&lt;/b&gt;, &lt;b&gt; matchCount&lt;/b&gt;, and &lt;b&gt; refinementHref&lt;/b&gt; for the various aspects of the items found. For example, if you searched for &#39;Mustang&#39;, some of the aspect would be &lt;b&gt; Model Year&lt;/b&gt;,  &lt;b&gt; Exterior Color&lt;/b&gt;, &lt;b&gt; Vehicle Mileage&lt;/b&gt;, etc. &lt;br /&gt; &lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt; ASPECT_REFINEMENTS are category specific.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;   &lt;li&gt;&lt;b&gt; BUYING_OPTION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.buyingOptionDistributions\&quot;&gt;buyingOptionDistributions&lt;/a&gt;  container, which has the &lt;b&gt; matchCount&lt;/b&gt; and &lt;b&gt; refinementHref&lt;/b&gt; for &lt;b&gt; AUCTION&lt;/b&gt; and &lt;b&gt; FIXED_PRICE&lt;/b&gt; (Buy It Now) items. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Classified items are not supported. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CATEGORY_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.categoryDistributions\&quot;&gt;categoryDistributions&lt;/a&gt; container, which has the categories that the item is in.   &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CONDITION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.conditionDistributions\&quot;&gt;conditionDistributions&lt;/a&gt;  container, such as &lt;b&gt; NEW&lt;/b&gt;, &lt;b&gt; USED&lt;/b&gt;, etc. Within these groups are multiple states of the condition. For example, &lt;b&gt; New &lt;/b&gt; can be New without tag, New in box, New without box, etc. &lt;/li&gt;   &lt;li&gt;&lt;b&gt; MATCHING_ITEMS&lt;/b&gt; - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. &lt;/li&gt; &lt;li&gt;&lt;b&gt; FULL &lt;/b&gt; - This returns all the refinement containers and all the matching items.&lt;/li&gt;   &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; MATCHING_ITEMS (optional)
     * @param string $filter        This field supports multiple field filters that can be used to limit/customize the result set. &lt;br /&gt;&lt;br /&gt;The following lists the supported filters. For details and examples for all the filters, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html\&quot;&gt;Buy API Field Filters&lt;/a&gt;.  &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;ul&gt;     &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#buyingOptions\&quot;&gt;buyingOptions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditionIds\&quot;&gt;conditionIds&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditions\&quot;&gt;conditions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#itemLocationCountry\&quot;&gt;itemLocationCountry&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;      &lt;td&gt; &lt;ul&gt;&lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#lastSoldDate\&quot;&gt;lastSoldDate&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#price\&quot;&gt;price&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#priceCurrency\&quot;&gt;priceCurrency&lt;/a&gt; &lt;/li&gt;  &lt;/ul&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;/table&gt; &lt;br /&gt;The following example filters the result set by price. &lt;b&gt;Note: &lt;/b&gt;To filter by price, &lt;b&gt;price&lt;/b&gt; and &lt;b&gt;priceCurrency&lt;/b&gt; must always be used together.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;filter&#x3D;price:[50..500],priceCurrency:USD&lt;/code&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:FilterField (optional)
     * @param string $gtin          This field lets you search by the Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.        &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?gtin&#x3D;241986085&amp;category_ids&#x3D;9355&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;gtin&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $limit         The number of items, from the result set, returned in a single page.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Default:&lt;/b&gt; 50&lt;br /&gt;&lt;b&gt; Maximum number of items per page (limit): &lt;/b&gt;200  &lt;br /&gt; &lt;b&gt; Maximum number of items in a result set: &lt;/b&gt; 10,000 (optional)
     * @param string $offset        Specifies the number of items to skip in the result set. This is used with the &lt;b&gt; limit&lt;/b&gt; field to control the pagination of the output.  &lt;br /&gt;&lt;br /&gt;If &lt;b&gt; offset&lt;/b&gt; is 0 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 1-10 from the list of items returned, if &lt;b&gt; offset&lt;/b&gt; is 10 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 11 thru 20 from the list of items returned.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values&lt;/b&gt;: 0-10,000 (inclusive) &lt;br /&gt; &lt;b&gt; Default:&lt;/b&gt; 0 &lt;br /&gt; &lt;b&gt; Maximum number of items returned: &lt;/b&gt; 10,000 (optional)
     * @param string $q             A string consisting of one or more keywords that are used to search for items on eBay. The keywords are handled as follows: &lt;ul&gt;&lt;li&gt;If the keywords are separated by a comma, it is treated as an AND. In the following example, the query returns items that have iphone &lt;b&gt; AND&lt;/b&gt; ipad.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,ipad&amp;category_ids&#x3D;15724&lt;/code&gt;  &lt;br/&gt; &lt;/li&gt;  &lt;li&gt; If the keywords are separated by a space, it is treated as an OR.  In the following examples, the query returns items that have iphone &lt;b&gt; OR&lt;/b&gt; ipad.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;nbsp;ipad&lt;/code&gt; &lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,&amp;nbsp;ipad&amp;category_ids&#x3D;15724&lt;/code&gt; &lt;br /&gt;   &lt;/li&gt;&lt;/ul&gt; &lt;b&gt; Restriction: &lt;/b&gt;The &lt;code&gt;*&lt;/code&gt; wildcard character is &lt;b&gt; not&lt;/b&gt; allowed in this field. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $sort          This field specifies the order and the field name to use to sort the items. To sort in descending order use &lt;code&gt;-&lt;/code&gt; before the field name.  Currently, you can only sort by price (in ascending or descending order).     &lt;br /&gt;&lt;br /&gt;If no sort parameter is submitted, the result set is sorted by  &amp;quot;&lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/searchstanding.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Best Match&lt;/a&gt;&amp;quot;.     &lt;br /&gt;&lt;br /&gt;The following are examples of using the &lt;b&gt; sort&lt;/b&gt; query parameter.    &lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Sort&lt;/th&gt;&lt;th&gt;Result&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in ascending order (lowest price first)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;-price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in descending order (highest price first)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt; Default: &lt;/b&gt; ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:SortField (optional)
     *
     * @throws \TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\ApiException on non-2xx response
     * @throws \InvalidArgumentException
     *
     * @return array of \TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection, HTTP status code, HTTP response headers (array of strings)
     */
    public function searchWithHttpInfo($aspect_filter = null, $category_ids = null, $epid = null, $fieldgroups = null, $filter = null, $gtin = null, $limit = null, $offset = null, $q = null, $sort = null)
    {
        $request = $this->searchRequest($aspect_filter, $category_ids, $epid, $fieldgroups, $filter, $gtin, $limit, $offset, $q, $sort);

        try {
            $options = $this->createHttpClientOption();

            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException("[{$e->getCode()}] {$e->getMessage()}", (int) $e->getCode(), $e->getResponse() ? $e->getResponse()->getHeaders() : null, $e->getResponse() ? (string) $e->getResponse()->getBody() : null, $e);
            } catch (ConnectException $e) {
                throw new ApiException("[{$e->getCode()}] {$e->getMessage()}", (int) $e->getCode(), null, null, $e);
            } catch (GuzzleException $e) {
                throw new ApiException("[{$e->getCode()}] {$e->getMessage()}", (int) $e->getCode(), null, null, $e);
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(sprintf('[%d] Error connecting to the API (%s)', $statusCode, (string) $request->getUri()), $statusCode, $response->getHeaders(), (string) $response->getBody());
            }

            switch ($statusCode) {
                case 200:
                    if ('\TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection' === '\SplFileObject') {
                        $content = $response->getBody(); // Stream goes to serializer.
                    } else {
                        $content = (string) $response->getBody();
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection', []),
                        $response->getStatusCode(),
                        $response->getHeaders(),
                    ];
            }

            $returnType = '\TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection';

            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); // Stream goes to serializer.
            } else {
                $content = (string) $response->getBody();
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders(),
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation searchAsync.
     *
     * @param string $aspect_filter This field lets you filter by item aspects. The aspect name/value pairs and category, which is required, is used to limit the results to specific aspects of the item. For example, in a clothing category one aspect pair would be Color/Red. The results are returned in the &lt;b&gt;refinement&lt;/b&gt; container.   &lt;br /&gt;&lt;br /&gt;For example, the method below uses the category ID for Women&#39;s Clothing. This will return only sold items for a woman&#39;s red or blue shirt.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;aspect_filter&#x3D;categoryId:15724,Color:{Red|Blue}&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;To get a list of the aspects pairs and the category, which is returned in the &lt;b&gt; dominantCategoryId&lt;/b&gt; field, set &lt;b&gt; fieldgroups&lt;/b&gt; to &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt;.   &lt;br /&gt;&lt;br /&gt; &lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;fieldgroups&#x3D;ASPECT_REFINEMENTS&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Format: &lt;/b&gt; &lt;code&gt;&lt;i&gt;aspectName&lt;/i&gt;:{&lt;i&gt;value1&lt;/i&gt;|&lt;i&gt;value2&lt;/i&gt;}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Required: &lt;/b&gt; The category ID is required &lt;i&gt;twice&lt;/i&gt;; once as a URI parameter and as part of the &lt;b&gt; aspect_filter&lt;/b&gt; parameter. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/gct:AspectFilter (optional)
     * @param string $category_ids  The category ID is required and is used to limit the results. For example, if you search for &#39;shirt&#39; the result set will be very large. But if you also include the category ID &lt;code&gt;137084&lt;/code&gt;, the results will be limited to &#39;Men&#39;s Athletic Apparel&#39;. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;137084&lt;/code&gt;                &lt;p&gt;The list of eBay category IDs is not published and category IDs are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site: &lt;/p&gt;     &lt;ul&gt; &lt;li&gt;For the US marketplace, use the &lt;a href&#x3D;\&quot;https://pages.ebay.com/sellerinformation/news/categorychanges.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Category Changes page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Use the Taxonomy API. For details see &lt;a href&#x3D;\&quot;/api-docs/buy/buy-categories.html\&quot;&gt;Get Categories for Buy APIs&lt;/a&gt;. &lt;/li&gt;  &lt;/ul&gt;  &lt;b&gt; Usage:&lt;/b&gt;  &lt;ul&gt;&lt;li&gt;This field can have one category ID or a comma separated list of IDs.&lt;/li&gt;    &lt;li&gt;You can use &lt;b&gt;category_ids&lt;/b&gt; by itself or use it with any combination of the &lt;b&gt; gtin&lt;/b&gt;, &lt;b&gt; epid&lt;/b&gt;, and &lt;b&gt; q&lt;/b&gt; fields, which gives you additional control over the result set.&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;Restrictions: &lt;/b&gt; &lt;ul&gt;  &lt;li&gt;Partners will be given a list of categories they can use.  &lt;/li&gt;  &lt;li&gt;To use a top-level (L1) category, you &lt;b&gt; must&lt;/b&gt; also include the &lt;b&gt; q&lt;/b&gt;, or &lt;b&gt; gtin&lt;/b&gt;, or &lt;b&gt; epid&lt;/b&gt;  query parameter.  &lt;/li&gt;  &lt;/ul&gt; &lt;b&gt;Maximum number of categories:&lt;/b&gt; 4 (optional)
     * @param string $epid          The ePID is the eBay product identifier of a product from the eBay product catalog. This field limits the results to only items in the specified ePID. &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?epid&#x3D;241986085&amp;category_ids&#x3D;168058&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;You can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/catalog/resources/product_summary/methods/search\&quot;&gt;product_summary/search&lt;/a&gt; method in the &lt;b&gt;Catalog&lt;/b&gt; API to search for the ePID of the product.   &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;epid&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $fieldgroups   This field lets you control what is to be returned in the response and accepts a comma separated list of values. &lt;br /&gt;&lt;br /&gt;The default is &lt;b&gt; MATCHING_ITEMS&lt;/b&gt;, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, &lt;a href&#x3D;\&quot;#request.aspect_filter\&quot;&gt;aspect_filter&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;    &lt;li&gt;&lt;b&gt; ASPECT_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.aspectDistributions\&quot;&gt;aspectDistributions&lt;/a&gt; container, which has the &lt;b&gt; dominantCategoryId&lt;/b&gt;, &lt;b&gt; matchCount&lt;/b&gt;, and &lt;b&gt; refinementHref&lt;/b&gt; for the various aspects of the items found. For example, if you searched for &#39;Mustang&#39;, some of the aspect would be &lt;b&gt; Model Year&lt;/b&gt;,  &lt;b&gt; Exterior Color&lt;/b&gt;, &lt;b&gt; Vehicle Mileage&lt;/b&gt;, etc. &lt;br /&gt; &lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt; ASPECT_REFINEMENTS are category specific.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;   &lt;li&gt;&lt;b&gt; BUYING_OPTION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.buyingOptionDistributions\&quot;&gt;buyingOptionDistributions&lt;/a&gt;  container, which has the &lt;b&gt; matchCount&lt;/b&gt; and &lt;b&gt; refinementHref&lt;/b&gt; for &lt;b&gt; AUCTION&lt;/b&gt; and &lt;b&gt; FIXED_PRICE&lt;/b&gt; (Buy It Now) items. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Classified items are not supported. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CATEGORY_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.categoryDistributions\&quot;&gt;categoryDistributions&lt;/a&gt; container, which has the categories that the item is in.   &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CONDITION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.conditionDistributions\&quot;&gt;conditionDistributions&lt;/a&gt;  container, such as &lt;b&gt; NEW&lt;/b&gt;, &lt;b&gt; USED&lt;/b&gt;, etc. Within these groups are multiple states of the condition. For example, &lt;b&gt; New &lt;/b&gt; can be New without tag, New in box, New without box, etc. &lt;/li&gt;   &lt;li&gt;&lt;b&gt; MATCHING_ITEMS&lt;/b&gt; - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. &lt;/li&gt; &lt;li&gt;&lt;b&gt; FULL &lt;/b&gt; - This returns all the refinement containers and all the matching items.&lt;/li&gt;   &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; MATCHING_ITEMS (optional)
     * @param string $filter        This field supports multiple field filters that can be used to limit/customize the result set. &lt;br /&gt;&lt;br /&gt;The following lists the supported filters. For details and examples for all the filters, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html\&quot;&gt;Buy API Field Filters&lt;/a&gt;.  &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;ul&gt;     &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#buyingOptions\&quot;&gt;buyingOptions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditionIds\&quot;&gt;conditionIds&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditions\&quot;&gt;conditions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#itemLocationCountry\&quot;&gt;itemLocationCountry&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;      &lt;td&gt; &lt;ul&gt;&lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#lastSoldDate\&quot;&gt;lastSoldDate&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#price\&quot;&gt;price&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#priceCurrency\&quot;&gt;priceCurrency&lt;/a&gt; &lt;/li&gt;  &lt;/ul&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;/table&gt; &lt;br /&gt;The following example filters the result set by price. &lt;b&gt;Note: &lt;/b&gt;To filter by price, &lt;b&gt;price&lt;/b&gt; and &lt;b&gt;priceCurrency&lt;/b&gt; must always be used together.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;filter&#x3D;price:[50..500],priceCurrency:USD&lt;/code&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:FilterField (optional)
     * @param string $gtin          This field lets you search by the Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.        &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?gtin&#x3D;241986085&amp;category_ids&#x3D;9355&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;gtin&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $limit         The number of items, from the result set, returned in a single page.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Default:&lt;/b&gt; 50&lt;br /&gt;&lt;b&gt; Maximum number of items per page (limit): &lt;/b&gt;200  &lt;br /&gt; &lt;b&gt; Maximum number of items in a result set: &lt;/b&gt; 10,000 (optional)
     * @param string $offset        Specifies the number of items to skip in the result set. This is used with the &lt;b&gt; limit&lt;/b&gt; field to control the pagination of the output.  &lt;br /&gt;&lt;br /&gt;If &lt;b&gt; offset&lt;/b&gt; is 0 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 1-10 from the list of items returned, if &lt;b&gt; offset&lt;/b&gt; is 10 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 11 thru 20 from the list of items returned.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values&lt;/b&gt;: 0-10,000 (inclusive) &lt;br /&gt; &lt;b&gt; Default:&lt;/b&gt; 0 &lt;br /&gt; &lt;b&gt; Maximum number of items returned: &lt;/b&gt; 10,000 (optional)
     * @param string $q             A string consisting of one or more keywords that are used to search for items on eBay. The keywords are handled as follows: &lt;ul&gt;&lt;li&gt;If the keywords are separated by a comma, it is treated as an AND. In the following example, the query returns items that have iphone &lt;b&gt; AND&lt;/b&gt; ipad.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,ipad&amp;category_ids&#x3D;15724&lt;/code&gt;  &lt;br/&gt; &lt;/li&gt;  &lt;li&gt; If the keywords are separated by a space, it is treated as an OR.  In the following examples, the query returns items that have iphone &lt;b&gt; OR&lt;/b&gt; ipad.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;nbsp;ipad&lt;/code&gt; &lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,&amp;nbsp;ipad&amp;category_ids&#x3D;15724&lt;/code&gt; &lt;br /&gt;   &lt;/li&gt;&lt;/ul&gt; &lt;b&gt; Restriction: &lt;/b&gt;The &lt;code&gt;*&lt;/code&gt; wildcard character is &lt;b&gt; not&lt;/b&gt; allowed in this field. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $sort          This field specifies the order and the field name to use to sort the items. To sort in descending order use &lt;code&gt;-&lt;/code&gt; before the field name.  Currently, you can only sort by price (in ascending or descending order).     &lt;br /&gt;&lt;br /&gt;If no sort parameter is submitted, the result set is sorted by  &amp;quot;&lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/searchstanding.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Best Match&lt;/a&gt;&amp;quot;.     &lt;br /&gt;&lt;br /&gt;The following are examples of using the &lt;b&gt; sort&lt;/b&gt; query parameter.    &lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Sort&lt;/th&gt;&lt;th&gt;Result&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in ascending order (lowest price first)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;-price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in descending order (highest price first)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt; Default: &lt;/b&gt; ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:SortField (optional)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsync($aspect_filter = null, $category_ids = null, $epid = null, $fieldgroups = null, $filter = null, $gtin = null, $limit = null, $offset = null, $q = null, $sort = null)
    {
        return $this->searchAsyncWithHttpInfo($aspect_filter, $category_ids, $epid, $fieldgroups, $filter, $gtin, $limit, $offset, $q, $sort)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation searchAsyncWithHttpInfo.
     *
     * @param string $aspect_filter This field lets you filter by item aspects. The aspect name/value pairs and category, which is required, is used to limit the results to specific aspects of the item. For example, in a clothing category one aspect pair would be Color/Red. The results are returned in the &lt;b&gt;refinement&lt;/b&gt; container.   &lt;br /&gt;&lt;br /&gt;For example, the method below uses the category ID for Women&#39;s Clothing. This will return only sold items for a woman&#39;s red or blue shirt.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;aspect_filter&#x3D;categoryId:15724,Color:{Red|Blue}&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;To get a list of the aspects pairs and the category, which is returned in the &lt;b&gt; dominantCategoryId&lt;/b&gt; field, set &lt;b&gt; fieldgroups&lt;/b&gt; to &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt;.   &lt;br /&gt;&lt;br /&gt; &lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;fieldgroups&#x3D;ASPECT_REFINEMENTS&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Format: &lt;/b&gt; &lt;code&gt;&lt;i&gt;aspectName&lt;/i&gt;:{&lt;i&gt;value1&lt;/i&gt;|&lt;i&gt;value2&lt;/i&gt;}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Required: &lt;/b&gt; The category ID is required &lt;i&gt;twice&lt;/i&gt;; once as a URI parameter and as part of the &lt;b&gt; aspect_filter&lt;/b&gt; parameter. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/gct:AspectFilter (optional)
     * @param string $category_ids  The category ID is required and is used to limit the results. For example, if you search for &#39;shirt&#39; the result set will be very large. But if you also include the category ID &lt;code&gt;137084&lt;/code&gt;, the results will be limited to &#39;Men&#39;s Athletic Apparel&#39;. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;137084&lt;/code&gt;                &lt;p&gt;The list of eBay category IDs is not published and category IDs are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site: &lt;/p&gt;     &lt;ul&gt; &lt;li&gt;For the US marketplace, use the &lt;a href&#x3D;\&quot;https://pages.ebay.com/sellerinformation/news/categorychanges.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Category Changes page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Use the Taxonomy API. For details see &lt;a href&#x3D;\&quot;/api-docs/buy/buy-categories.html\&quot;&gt;Get Categories for Buy APIs&lt;/a&gt;. &lt;/li&gt;  &lt;/ul&gt;  &lt;b&gt; Usage:&lt;/b&gt;  &lt;ul&gt;&lt;li&gt;This field can have one category ID or a comma separated list of IDs.&lt;/li&gt;    &lt;li&gt;You can use &lt;b&gt;category_ids&lt;/b&gt; by itself or use it with any combination of the &lt;b&gt; gtin&lt;/b&gt;, &lt;b&gt; epid&lt;/b&gt;, and &lt;b&gt; q&lt;/b&gt; fields, which gives you additional control over the result set.&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;Restrictions: &lt;/b&gt; &lt;ul&gt;  &lt;li&gt;Partners will be given a list of categories they can use.  &lt;/li&gt;  &lt;li&gt;To use a top-level (L1) category, you &lt;b&gt; must&lt;/b&gt; also include the &lt;b&gt; q&lt;/b&gt;, or &lt;b&gt; gtin&lt;/b&gt;, or &lt;b&gt; epid&lt;/b&gt;  query parameter.  &lt;/li&gt;  &lt;/ul&gt; &lt;b&gt;Maximum number of categories:&lt;/b&gt; 4 (optional)
     * @param string $epid          The ePID is the eBay product identifier of a product from the eBay product catalog. This field limits the results to only items in the specified ePID. &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?epid&#x3D;241986085&amp;category_ids&#x3D;168058&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;You can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/catalog/resources/product_summary/methods/search\&quot;&gt;product_summary/search&lt;/a&gt; method in the &lt;b&gt;Catalog&lt;/b&gt; API to search for the ePID of the product.   &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;epid&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $fieldgroups   This field lets you control what is to be returned in the response and accepts a comma separated list of values. &lt;br /&gt;&lt;br /&gt;The default is &lt;b&gt; MATCHING_ITEMS&lt;/b&gt;, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, &lt;a href&#x3D;\&quot;#request.aspect_filter\&quot;&gt;aspect_filter&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;    &lt;li&gt;&lt;b&gt; ASPECT_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.aspectDistributions\&quot;&gt;aspectDistributions&lt;/a&gt; container, which has the &lt;b&gt; dominantCategoryId&lt;/b&gt;, &lt;b&gt; matchCount&lt;/b&gt;, and &lt;b&gt; refinementHref&lt;/b&gt; for the various aspects of the items found. For example, if you searched for &#39;Mustang&#39;, some of the aspect would be &lt;b&gt; Model Year&lt;/b&gt;,  &lt;b&gt; Exterior Color&lt;/b&gt;, &lt;b&gt; Vehicle Mileage&lt;/b&gt;, etc. &lt;br /&gt; &lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt; ASPECT_REFINEMENTS are category specific.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;   &lt;li&gt;&lt;b&gt; BUYING_OPTION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.buyingOptionDistributions\&quot;&gt;buyingOptionDistributions&lt;/a&gt;  container, which has the &lt;b&gt; matchCount&lt;/b&gt; and &lt;b&gt; refinementHref&lt;/b&gt; for &lt;b&gt; AUCTION&lt;/b&gt; and &lt;b&gt; FIXED_PRICE&lt;/b&gt; (Buy It Now) items. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Classified items are not supported. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CATEGORY_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.categoryDistributions\&quot;&gt;categoryDistributions&lt;/a&gt; container, which has the categories that the item is in.   &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CONDITION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.conditionDistributions\&quot;&gt;conditionDistributions&lt;/a&gt;  container, such as &lt;b&gt; NEW&lt;/b&gt;, &lt;b&gt; USED&lt;/b&gt;, etc. Within these groups are multiple states of the condition. For example, &lt;b&gt; New &lt;/b&gt; can be New without tag, New in box, New without box, etc. &lt;/li&gt;   &lt;li&gt;&lt;b&gt; MATCHING_ITEMS&lt;/b&gt; - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. &lt;/li&gt; &lt;li&gt;&lt;b&gt; FULL &lt;/b&gt; - This returns all the refinement containers and all the matching items.&lt;/li&gt;   &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; MATCHING_ITEMS (optional)
     * @param string $filter        This field supports multiple field filters that can be used to limit/customize the result set. &lt;br /&gt;&lt;br /&gt;The following lists the supported filters. For details and examples for all the filters, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html\&quot;&gt;Buy API Field Filters&lt;/a&gt;.  &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;ul&gt;     &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#buyingOptions\&quot;&gt;buyingOptions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditionIds\&quot;&gt;conditionIds&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditions\&quot;&gt;conditions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#itemLocationCountry\&quot;&gt;itemLocationCountry&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;      &lt;td&gt; &lt;ul&gt;&lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#lastSoldDate\&quot;&gt;lastSoldDate&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#price\&quot;&gt;price&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#priceCurrency\&quot;&gt;priceCurrency&lt;/a&gt; &lt;/li&gt;  &lt;/ul&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;/table&gt; &lt;br /&gt;The following example filters the result set by price. &lt;b&gt;Note: &lt;/b&gt;To filter by price, &lt;b&gt;price&lt;/b&gt; and &lt;b&gt;priceCurrency&lt;/b&gt; must always be used together.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;filter&#x3D;price:[50..500],priceCurrency:USD&lt;/code&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:FilterField (optional)
     * @param string $gtin          This field lets you search by the Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.        &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?gtin&#x3D;241986085&amp;category_ids&#x3D;9355&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;gtin&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $limit         The number of items, from the result set, returned in a single page.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Default:&lt;/b&gt; 50&lt;br /&gt;&lt;b&gt; Maximum number of items per page (limit): &lt;/b&gt;200  &lt;br /&gt; &lt;b&gt; Maximum number of items in a result set: &lt;/b&gt; 10,000 (optional)
     * @param string $offset        Specifies the number of items to skip in the result set. This is used with the &lt;b&gt; limit&lt;/b&gt; field to control the pagination of the output.  &lt;br /&gt;&lt;br /&gt;If &lt;b&gt; offset&lt;/b&gt; is 0 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 1-10 from the list of items returned, if &lt;b&gt; offset&lt;/b&gt; is 10 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 11 thru 20 from the list of items returned.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values&lt;/b&gt;: 0-10,000 (inclusive) &lt;br /&gt; &lt;b&gt; Default:&lt;/b&gt; 0 &lt;br /&gt; &lt;b&gt; Maximum number of items returned: &lt;/b&gt; 10,000 (optional)
     * @param string $q             A string consisting of one or more keywords that are used to search for items on eBay. The keywords are handled as follows: &lt;ul&gt;&lt;li&gt;If the keywords are separated by a comma, it is treated as an AND. In the following example, the query returns items that have iphone &lt;b&gt; AND&lt;/b&gt; ipad.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,ipad&amp;category_ids&#x3D;15724&lt;/code&gt;  &lt;br/&gt; &lt;/li&gt;  &lt;li&gt; If the keywords are separated by a space, it is treated as an OR.  In the following examples, the query returns items that have iphone &lt;b&gt; OR&lt;/b&gt; ipad.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;nbsp;ipad&lt;/code&gt; &lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,&amp;nbsp;ipad&amp;category_ids&#x3D;15724&lt;/code&gt; &lt;br /&gt;   &lt;/li&gt;&lt;/ul&gt; &lt;b&gt; Restriction: &lt;/b&gt;The &lt;code&gt;*&lt;/code&gt; wildcard character is &lt;b&gt; not&lt;/b&gt; allowed in this field. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $sort          This field specifies the order and the field name to use to sort the items. To sort in descending order use &lt;code&gt;-&lt;/code&gt; before the field name.  Currently, you can only sort by price (in ascending or descending order).     &lt;br /&gt;&lt;br /&gt;If no sort parameter is submitted, the result set is sorted by  &amp;quot;&lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/searchstanding.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Best Match&lt;/a&gt;&amp;quot;.     &lt;br /&gt;&lt;br /&gt;The following are examples of using the &lt;b&gt; sort&lt;/b&gt; query parameter.    &lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Sort&lt;/th&gt;&lt;th&gt;Result&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in ascending order (lowest price first)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;-price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in descending order (highest price first)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt; Default: &lt;/b&gt; ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:SortField (optional)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function searchAsyncWithHttpInfo($aspect_filter = null, $category_ids = null, $epid = null, $fieldgroups = null, $filter = null, $gtin = null, $limit = null, $offset = null, $q = null, $sort = null)
    {
        $returnType = '\TNT\Ebay\Buy\MarketplaceInsightsBeta\V1\Model\SalesHistoryPagedCollection';
        $request = $this->searchRequest($aspect_filter, $category_ids, $epid, $fieldgroups, $filter, $gtin, $limit, $offset, $q, $sort);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); // Stream goes to serializer.
                    } else {
                        $content = (string) $response->getBody();
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders(),
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();

                    throw new ApiException(sprintf('[%d] Error connecting to the API (%s)', $statusCode, $exception->getRequest()->getUri()), $statusCode, $response->getHeaders(), (string) $response->getBody(), $exception instanceof \Throwable ? $exception : null);
                }
            );
    }

    /**
     * Create request for operation 'search'.
     *
     * @param string $aspect_filter This field lets you filter by item aspects. The aspect name/value pairs and category, which is required, is used to limit the results to specific aspects of the item. For example, in a clothing category one aspect pair would be Color/Red. The results are returned in the &lt;b&gt;refinement&lt;/b&gt; container.   &lt;br /&gt;&lt;br /&gt;For example, the method below uses the category ID for Women&#39;s Clothing. This will return only sold items for a woman&#39;s red or blue shirt.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;aspect_filter&#x3D;categoryId:15724,Color:{Red|Blue}&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;To get a list of the aspects pairs and the category, which is returned in the &lt;b&gt; dominantCategoryId&lt;/b&gt; field, set &lt;b&gt; fieldgroups&lt;/b&gt; to &lt;code&gt;ASPECT_REFINEMENTS&lt;/code&gt;.   &lt;br /&gt;&lt;br /&gt; &lt;code&gt;/buy/marketplace_insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;15724&amp;fieldgroups&#x3D;ASPECT_REFINEMENTS&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Format: &lt;/b&gt; &lt;code&gt;&lt;i&gt;aspectName&lt;/i&gt;:{&lt;i&gt;value1&lt;/i&gt;|&lt;i&gt;value2&lt;/i&gt;}&lt;/code&gt;    &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Required: &lt;/b&gt; The category ID is required &lt;i&gt;twice&lt;/i&gt;; once as a URI parameter and as part of the &lt;b&gt; aspect_filter&lt;/b&gt; parameter. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/gct:AspectFilter (optional)
     * @param string $category_ids  The category ID is required and is used to limit the results. For example, if you search for &#39;shirt&#39; the result set will be very large. But if you also include the category ID &lt;code&gt;137084&lt;/code&gt;, the results will be limited to &#39;Men&#39;s Athletic Apparel&#39;. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;shirt&amp;category_ids&#x3D;137084&lt;/code&gt;                &lt;p&gt;The list of eBay category IDs is not published and category IDs are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site: &lt;/p&gt;     &lt;ul&gt; &lt;li&gt;For the US marketplace, use the &lt;a href&#x3D;\&quot;https://pages.ebay.com/sellerinformation/news/categorychanges.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Category Changes page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Use the Taxonomy API. For details see &lt;a href&#x3D;\&quot;/api-docs/buy/buy-categories.html\&quot;&gt;Get Categories for Buy APIs&lt;/a&gt;. &lt;/li&gt;  &lt;/ul&gt;  &lt;b&gt; Usage:&lt;/b&gt;  &lt;ul&gt;&lt;li&gt;This field can have one category ID or a comma separated list of IDs.&lt;/li&gt;    &lt;li&gt;You can use &lt;b&gt;category_ids&lt;/b&gt; by itself or use it with any combination of the &lt;b&gt; gtin&lt;/b&gt;, &lt;b&gt; epid&lt;/b&gt;, and &lt;b&gt; q&lt;/b&gt; fields, which gives you additional control over the result set.&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;Restrictions: &lt;/b&gt; &lt;ul&gt;  &lt;li&gt;Partners will be given a list of categories they can use.  &lt;/li&gt;  &lt;li&gt;To use a top-level (L1) category, you &lt;b&gt; must&lt;/b&gt; also include the &lt;b&gt; q&lt;/b&gt;, or &lt;b&gt; gtin&lt;/b&gt;, or &lt;b&gt; epid&lt;/b&gt;  query parameter.  &lt;/li&gt;  &lt;/ul&gt; &lt;b&gt;Maximum number of categories:&lt;/b&gt; 4 (optional)
     * @param string $epid          The ePID is the eBay product identifier of a product from the eBay product catalog. This field limits the results to only items in the specified ePID. &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?epid&#x3D;241986085&amp;category_ids&#x3D;168058&lt;/code&gt;  &lt;br /&gt;&lt;br /&gt;You can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/catalog/resources/product_summary/methods/search\&quot;&gt;product_summary/search&lt;/a&gt; method in the &lt;b&gt;Catalog&lt;/b&gt; API to search for the ePID of the product.   &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;epid&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $fieldgroups   This field lets you control what is to be returned in the response and accepts a comma separated list of values. &lt;br /&gt;&lt;br /&gt;The default is &lt;b&gt; MATCHING_ITEMS&lt;/b&gt;, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, &lt;a href&#x3D;\&quot;#request.aspect_filter\&quot;&gt;aspect_filter&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;    &lt;li&gt;&lt;b&gt; ASPECT_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.aspectDistributions\&quot;&gt;aspectDistributions&lt;/a&gt; container, which has the &lt;b&gt; dominantCategoryId&lt;/b&gt;, &lt;b&gt; matchCount&lt;/b&gt;, and &lt;b&gt; refinementHref&lt;/b&gt; for the various aspects of the items found. For example, if you searched for &#39;Mustang&#39;, some of the aspect would be &lt;b&gt; Model Year&lt;/b&gt;,  &lt;b&gt; Exterior Color&lt;/b&gt;, &lt;b&gt; Vehicle Mileage&lt;/b&gt;, etc. &lt;br /&gt; &lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt; ASPECT_REFINEMENTS are category specific.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;   &lt;li&gt;&lt;b&gt; BUYING_OPTION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.buyingOptionDistributions\&quot;&gt;buyingOptionDistributions&lt;/a&gt;  container, which has the &lt;b&gt; matchCount&lt;/b&gt; and &lt;b&gt; refinementHref&lt;/b&gt; for &lt;b&gt; AUCTION&lt;/b&gt; and &lt;b&gt; FIXED_PRICE&lt;/b&gt; (Buy It Now) items. &lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt;Note: &lt;/b&gt;Classified items are not supported. &lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CATEGORY_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.categoryDistributions\&quot;&gt;categoryDistributions&lt;/a&gt; container, which has the categories that the item is in.   &lt;/li&gt;   &lt;li&gt;&lt;b&gt; CONDITION_REFINEMENTS&lt;/b&gt; - This returns the &lt;a href&#x3D;\&quot;#response.refinement.conditionDistributions\&quot;&gt;conditionDistributions&lt;/a&gt;  container, such as &lt;b&gt; NEW&lt;/b&gt;, &lt;b&gt; USED&lt;/b&gt;, etc. Within these groups are multiple states of the condition. For example, &lt;b&gt; New &lt;/b&gt; can be New without tag, New in box, New without box, etc. &lt;/li&gt;   &lt;li&gt;&lt;b&gt; MATCHING_ITEMS&lt;/b&gt; - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. &lt;/li&gt; &lt;li&gt;&lt;b&gt; FULL &lt;/b&gt; - This returns all the refinement containers and all the matching items.&lt;/li&gt;   &lt;/ul&gt; Code so that your app gracefully handles any future changes to this list.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Default: &lt;/b&gt; MATCHING_ITEMS (optional)
     * @param string $filter        This field supports multiple field filters that can be used to limit/customize the result set. &lt;br /&gt;&lt;br /&gt;The following lists the supported filters. For details and examples for all the filters, see &lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html\&quot;&gt;Buy API Field Filters&lt;/a&gt;.  &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;ul&gt;     &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#buyingOptions\&quot;&gt;buyingOptions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditionIds\&quot;&gt;conditionIds&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#conditions\&quot;&gt;conditions&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#itemLocationCountry\&quot;&gt;itemLocationCountry&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt;      &lt;td&gt; &lt;ul&gt;&lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#lastSoldDate\&quot;&gt;lastSoldDate&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#price\&quot;&gt;price&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href&#x3D;\&quot;/api-docs/buy/static/ref-buy-browse-filters.html#priceCurrency\&quot;&gt;priceCurrency&lt;/a&gt; &lt;/li&gt;  &lt;/ul&gt;&lt;/td&gt;  &lt;/tr&gt; &lt;/table&gt; &lt;br /&gt;The following example filters the result set by price. &lt;b&gt;Note: &lt;/b&gt;To filter by price, &lt;b&gt;price&lt;/b&gt; and &lt;b&gt;priceCurrency&lt;/b&gt; must always be used together.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;filter&#x3D;price:[50..500],priceCurrency:USD&lt;/code&gt; For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:FilterField (optional)
     * @param string $gtin          This field lets you search by the Global Trade Item Number of the item as defined by &lt;a href&#x3D;\&quot;https://www.gtin.info\&quot; target&#x3D;\&quot;_blank\&quot;&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.        &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?gtin&#x3D;241986085&amp;category_ids&#x3D;9355&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt; Maximum: &lt;/b&gt; 1 &lt;b&gt;gtin&lt;/b&gt;    &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $limit         The number of items, from the result set, returned in a single page.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Default:&lt;/b&gt; 50&lt;br /&gt;&lt;b&gt; Maximum number of items per page (limit): &lt;/b&gt;200  &lt;br /&gt; &lt;b&gt; Maximum number of items in a result set: &lt;/b&gt; 10,000 (optional)
     * @param string $offset        Specifies the number of items to skip in the result set. This is used with the &lt;b&gt; limit&lt;/b&gt; field to control the pagination of the output.  &lt;br /&gt;&lt;br /&gt;If &lt;b&gt; offset&lt;/b&gt; is 0 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 1-10 from the list of items returned, if &lt;b&gt; offset&lt;/b&gt; is 10 and &lt;b&gt; limit&lt;/b&gt; is 10, the method will retrieve items 11 thru 20 from the list of items returned.  &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Valid Values&lt;/b&gt;: 0-10,000 (inclusive) &lt;br /&gt; &lt;b&gt; Default:&lt;/b&gt; 0 &lt;br /&gt; &lt;b&gt; Maximum number of items returned: &lt;/b&gt; 10,000 (optional)
     * @param string $q             A string consisting of one or more keywords that are used to search for items on eBay. The keywords are handled as follows: &lt;ul&gt;&lt;li&gt;If the keywords are separated by a comma, it is treated as an AND. In the following example, the query returns items that have iphone &lt;b&gt; AND&lt;/b&gt; ipad.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,ipad&amp;category_ids&#x3D;15724&lt;/code&gt;  &lt;br/&gt; &lt;/li&gt;  &lt;li&gt; If the keywords are separated by a space, it is treated as an OR.  In the following examples, the query returns items that have iphone &lt;b&gt; OR&lt;/b&gt; ipad.   &lt;br /&gt;&lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone&amp;category_ids&#x3D;15724&amp;nbsp;ipad&lt;/code&gt; &lt;br /&gt;&lt;code&gt;/buy/marketplace-insights/v1_beta/item_sales/search?q&#x3D;iphone,&amp;nbsp;ipad&amp;category_ids&#x3D;15724&lt;/code&gt; &lt;br /&gt;   &lt;/li&gt;&lt;/ul&gt; &lt;b&gt; Restriction: &lt;/b&gt;The &lt;code&gt;*&lt;/code&gt; wildcard character is &lt;b&gt; not&lt;/b&gt; allowed in this field. &lt;br /&gt;&lt;br /&gt;&lt;b&gt; Required: &lt;/b&gt; At least 1 &lt;b&gt; category_ids&lt;/b&gt;  &lt;br /&gt;&lt;b&gt;Optional: &lt;/b&gt;Any combination of &lt;b&gt; epid&lt;/b&gt;,  &lt;b&gt; gtin&lt;/b&gt;,  or &lt;b&gt; q&lt;/b&gt; (optional)
     * @param string $sort          This field specifies the order and the field name to use to sort the items. To sort in descending order use &lt;code&gt;-&lt;/code&gt; before the field name.  Currently, you can only sort by price (in ascending or descending order).     &lt;br /&gt;&lt;br /&gt;If no sort parameter is submitted, the result set is sorted by  &amp;quot;&lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/searchstanding.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Best Match&lt;/a&gt;&amp;quot;.     &lt;br /&gt;&lt;br /&gt;The following are examples of using the &lt;b&gt; sort&lt;/b&gt; query parameter.    &lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Sort&lt;/th&gt;&lt;th&gt;Result&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in ascending order (lowest price first)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;&amp;sort&#x3D;-price&lt;/code&gt;&lt;/td&gt;&lt;td&gt; Sorts by &lt;b&gt; price&lt;/b&gt; in descending order (highest price first)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt; Default: &lt;/b&gt; ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/buy/marketplace_insights/types/cos:SortField (optional)
     *
     * @throws \InvalidArgumentException
     *
     * @return \GuzzleHttp\Psr7\Request
     */
    public function searchRequest($aspect_filter = null, $category_ids = null, $epid = null, $fieldgroups = null, $filter = null, $gtin = null, $limit = null, $offset = null, $q = null, $sort = null)
    {
        $resourcePath = '/item_sales/search';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $aspect_filter,
            'aspect_filter', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $category_ids,
            'category_ids', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $epid,
            'epid', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $fieldgroups,
            'fieldgroups', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $filter,
            'filter', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $gtin,
            'gtin', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $limit,
            'limit', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $offset,
            'offset', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $q,
            'q', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $sort,
            'sort', // param base name
            'string', // openApiType
            'form', // style
            true // explode
        ) ?? []);

        if ($multipart) {
            $headers = $this->headerSelector->selectHeadersForMultipart(
                ['application/json']
            );
        } else {
            $headers = $this->headerSelector->selectHeaders(
                ['application/json'],
                []
            );
        }

        // For model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];

                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem,
                        ];
                    }
                }

                // For HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);
            } elseif ($headers['Content-Type'] === 'application/json') {
                $httpBody = \GuzzleHttp\json_encode($formParams);
            } else {
                // For HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($queryParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (! empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer '.$this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $query = ObjectSerializer::buildQuery($queryParams);

        return new Request(
            'GET',
            $this->config->getHost().$resourcePath.($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option.
     *
     * @throws \RuntimeException on file opening failure
     *
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];

        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'ab');

            if (! $options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: '.$this->config->getDebugFile());
            }
        }

        return $options;
    }
}
